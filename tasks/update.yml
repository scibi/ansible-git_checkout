---

- name: Save current checkout hash for update
  command: git rev-parse HEAD
  args:
    chdir: '{{ git_checkout__src_path }}'
  register: git_checkout__register_old_head
  changed_when: False
  become_user: '{{ git_checkout__user }}'

#- name: git_checkout__register_old_head.stdout
#  debug:
#    msg: '{{ git_checkout__register_old_head.stdout }}'

- name: Fetch remote branches and tags
  command: git fetch --all --tags
  args:
    chdir: '{{ git_checkout__src_path }}'
  become_user: '{{ git_checkout__user }}'
  register: git_checkout__register_git_fetch
  environment: '{{ git_checkout__register_git_environment }}'
  changed_when: git_checkout__register_git_fetch.stderr != ''

- name: Checkout correct version
  command: git checkout '{{ git_checkout__version }}'
  args:
    chdir: '{{ git_checkout__src_path }}'
  become_user: '{{ git_checkout__user }}'

- name: Get current branch name
  command:  git symbolic-ref --short -q HEAD
  args:
    chdir: '{{ git_checkout__src_path }}'
  register: git_checkout__register_branch_name
  changed_when: False
  ignore_errors: True
  become_user: '{{ git_checkout__user }}'

#- name: git_checkout__register_branch_name
#  debug:
#    msg: '{{ git_checkout__register_branch_name }}'

- name: Git pull in case of current branch update
  command: git pull
  args:
    chdir: '{{ git_checkout__app_path }}'
  environment: '{{ git_checkout__register_git_environment }}'
  become_user: '{{ git_checkout__user }}'
  register: git_checkout__register_git_pull
  changed_when: git_checkout__register_git_pull.stdout != 'Already up-to-date.'
  when: git_checkout__register_branch_name.rc == 0

- name: Save current checkout hash for update
  shell: git rev-parse HEAD
  args:
    chdir: '{{ git_checkout__src_path }}'
  register: git_checkout__register_new_head
  changed_when: False
  become_user: '{{ git_checkout__user }}'

#- name: git_checkout__register_new_head.stdout
#  debug:
#    msg: '{{ git_checkout__register_new_head.stdout }}'

- name: Update submodules
  command: git '--git-dir={{ git_checkout__src_path }}' submodule update 
  args:
    chdir: '{{ git_checkout__app_path }}'
  become_user: '{{ git_checkout__user }}'
  environment: '{{ git_checkout__register_git_environment }}'
  register: git_checkout__register_submodule_update
  changed_when: git_checkout__register_submodule_update.stdout != ''
  when: git_checkout__submodules_enable

- name: git_checkout__register_submodule_update
  debug:
    msg: '{{ git_checkout__register_submodule_update }}'
